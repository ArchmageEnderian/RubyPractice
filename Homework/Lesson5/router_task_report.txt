Отчет по работе
"Задание №2. Роутер"
Отчет составил:
Малахов Игорь Дмитриевич (ArchmageEnderian)

Раздел 1. Работа программы

Работа программы происходит следующим образом:
1) Инициализируется в памяти объект класса Router
2) Вызывается метод 'init'
3) Начинается работа внутри объекта класса. Первостепенно происходит подготовка команд HTTP:
~ GET - запрос либо всего списка постов (index), либо конкретного поста по индексу (show)
~ PUT - изменение поста по индексу
~ POST - добавление нового поста
~ DELETE - удаление поста по индексу
Для работы этих методов использвуют специальносозданный класс "PostController",
который является расширением модуля "Resource".
(Подробнее классы и модули будут описаны в следующем разделе)
4) После запускается бесконечный цикл для взаимодействия пользователя с ресурсами - "Posts", "Comments"
(в данном примере реализован только класс и модуль контроллера "Posts")
Также предусмотрен выход из программы вводом соответствующей клавиши.
5) Далее, по средствам выбора ресурса "Posts" происходит бесконечный цикл выбора соостветствующих команд
класса "PostController" пользователем для взаимодействия программы и пользователя.
Также предусмотрен выход из класса вводом соответствующей клавиши (возврат в цикл выбора в пункте 4).

Программа завершается после выхода пользователя в пункте 4.

Раздел 2. Структура классов и модулей

Класс Router

Класс Router представляет собой инициализирующий (главный) класс вызова.
В нем соержится 3 метода:
1) Стандартный метод initialize, отвечающий за инициализацию перменной класса routes.
(Вызывается автоматически в 1 пункте работы программы (см. Раздел 1) )
2) Метод resources, отвечающий за создание объекта класса PostController,
а также задания команд HTTP (GET, POST, PUT, DELETE) в переменную класс routes с указанием
вызова соответствующих методов класса PostController (index/show, create, update, destroy).
3) Метод init, отвечающий за вызов метода resources и дальнейшее взаимодействие пользователя и программы.

Класс PostsController

Класс PostsController отвечает за контроль процессов взаимодействия программы.
В нем содержатся специальные функции:
~ index - вывести на экран все посты
~ show - вывести пост с индексом, заданным пользователем
~ create - создание нового поста с текстом, заданным пользователем
~ update - обновление текста поста по индексу, заданными пользователем
~ destroy - удаление поста по индексу, заданным пользователем

Данный класс является расширением модуля Resource.
Это необходимо для насследования методов (синглтон-класса) объекта Resource.

Модуль Resource

Класс PostsController отвечает за хранения базового (для этого класса) метода connection.
Метод необходим для работы с пользователем. Он предоставляет выбор набора команд и вызывает
соответствующие методы класса PostsController при выборе соответствующих команд.